#!/usr/bin/env node

import { build } from 'vite'
import { build as esbuild } from 'esbuild'
import fs from 'fs'
import path from 'path'

async function buildForNetlify() {
  console.log('๐ ุจูุงุก ุงูุชุทุจูู ูููุดุฑ ุนูู Netlify...')
  
  try {
    // 1. ุจูุงุก ุงููุงุฌูุฉ ุงูุฃูุงููุฉ
    console.log('๐ฆ ุจูุงุก ุงููุงุฌูุฉ ุงูุฃูุงููุฉ...')
    await build({
      build: {
        outDir: 'dist/public',
        emptyOutDir: true
      }
    })
    
    // 2. ุจูุงุก ุงูุฎุงุฏู
    console.log('โ๏ธ ุจูุงุก ุงูุฎุงุฏู...')
    await esbuild({
      entryPoints: ['server/index.ts'],
      bundle: true,
      platform: 'node',
      target: 'node18',
      format: 'esm',
      outdir: 'dist',
      external: [
        // ููุงุนุฏ ุงูุจูุงูุงุช
        '@neondatabase/serverless',
        'pg',
        'postgres',
        
        // Firebase
        'firebase',
        'firebase-admin',
        
        // ููุชุจุงุช Node.js ุงูุฃุณุงุณูุฉ
        'express',
        'express-session',
        'multer',
        'bcryptjs',
        'archiver',
        'exceljs',
        'uuid',
        'ws',
        
        // ููุชุจุงุช ุฃุฎุฑู
        'drizzle-orm',
        'drizzle-zod',
        'zod',
        'connect-pg-simple',
        'memorystore',
        'passport',
        'passport-local'
      ],
      banner: {
        js: `
import { createRequire } from 'module';
const require = createRequire(import.meta.url);
import { fileURLToPath } from 'url';
import { dirname } from 'path';
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
`
      }
    })
    
    // 3. ุฅูุดุงุก netlify.toml
    console.log('๐ ุฅูุดุงุก ููู ุงูุชูููู...')
    const netlifyConfig = `[build]
  command = "node build-netlify.js"
  publish = "dist/public"
  functions = "dist/functions"

[build.environment]
  NODE_VERSION = "18"

[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/server/:splat"
  status = 200

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

[functions]
  node_bundler = "esbuild"
  external_node_modules = ["@neondatabase/serverless", "pg", "postgres", "firebase", "firebase-admin"]

[[headers]]
  for = "/api/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization"
`
    
    fs.writeFileSync('netlify.toml', netlifyConfig)
    
    // 4. ุฅูุดุงุก ุฏุงูุฉ Netlify ููุฎุงุฏู
    console.log('๐ง ุฅูุดุงุก ุฏุงูุฉ Netlify...')
    const functionsDir = 'dist/functions'
    if (!fs.existsSync(functionsDir)) {
      fs.mkdirSync(functionsDir, { recursive: true })
    }
    
    const netlifyHandler = `import { app } from '../index.js';
import serverless from 'serverless-http';

const handler = serverless(app);

export { handler };
`
    
    fs.writeFileSync(path.join(functionsDir, 'server.js'), netlifyHandler)
    
    // 5. ุฅูุดุงุก package.json ููุฅูุชุงุฌ
    console.log('๐ ุฅูุดุงุก package.json ููุฅูุชุงุฌ...')
    const productionPackage = {
      "name": "arabic-accounting-system",
      "version": "1.0.0",
      "type": "module",
      "engines": {
        "node": ">=18.0.0"
      },
      "dependencies": {
        "@neondatabase/serverless": "^0.10.4",
        "express": "^4.21.2",
        "express-session": "^1.18.1",
        "bcryptjs": "^3.0.2",
        "drizzle-orm": "^0.39.3",
        "drizzle-zod": "^0.7.0",
        "zod": "^3.23.8",
        "multer": "^1.4.5-lts.2",
        "uuid": "^11.1.0",
        "archiver": "^7.0.1",
        "exceljs": "^4.4.0",
        "firebase": "^11.9.1",
        "firebase-admin": "^13.4.0",
        "connect-pg-simple": "^10.0.0",
        "passport": "^0.7.0",
        "passport-local": "^1.0.0",
        "ws": "^8.18.0",
        "serverless-http": "^3.2.0"
      }
    }
    
    fs.writeFileSync('dist/package.json', JSON.stringify(productionPackage, null, 2))
    
    // 6. ูุณุฎ ุงููููุงุช ุงููุทููุจุฉ
    console.log('๐ ูุณุฎ ุงููููุงุช ุงููุทููุจุฉ...')
    
    // ูุณุฎ shared
    const sharedSrc = 'shared'
    const sharedDest = 'dist/shared'
    if (fs.existsSync(sharedSrc)) {
      fs.cpSync(sharedSrc, sharedDest, { recursive: true })
    }
    
    // ุฅูุดุงุก ููู ุงูุจูุฆุฉ ุงููุซุงู
    const envExample = `# ูุงุนุฏุฉ ุงูุจูุงูุงุช
DATABASE_URL=postgresql://username:password@host:5432/database

# ุงุฎุชูุงุฑู: ูุชุบูุฑุงุช Firebase
FIREBASE_PROJECT_ID=your_project_id
FIREBASE_PRIVATE_KEY=your_private_key
FIREBASE_CLIENT_EMAIL=your_client_email

# ุงุฎุชูุงุฑู: ูุชุบูุฑุงุช Supabase
SUPABASE_URL=your_supabase_url
SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# ุณุฑ ุงูุฌูุณุฉ
SESSION_SECRET=your_random_session_secret_here
`
    
    fs.writeFileSync('dist/.env.example', envExample)
    
    // 7. ุฅูุดุงุก ููู README ูููุดุฑ
    const deployReadme = `# ูุธุงู ุงููุญุงุณุจุฉ ุงูุนุฑุจู - ุงููุดุฑ ุนูู Netlify

## ุฎุทูุงุช ุงููุดุฑ:

### 1. ุฑูุน ุงููููุงุช
- ุงุฑูุน ูุฌูุฏ \`dist\` ูุงููุงู ุฅูู ูุณุชูุฏุน GitHub
- ุฃู ุงุฑูุน ุงููููุงุช ูุจุงุดุฑุฉ ุฅูู Netlify

### 2. ุชูููู ุงููุชุบูุฑุงุช ุงูุจูุฆูุฉ ูู Netlify
ุงูุชูู ุฅูู Site Settings > Environment Variables ูุฃุถู:

\`\`\`
DATABASE_URL=postgresql://your_neon_database_url
SESSION_SECRET=your_random_secret_key
\`\`\`

### 3. ุงุฎุชูุงุฑู - Firebase (ููุชุฎุฒูู ุงูุณุญุงุจู)
\`\`\`
FIREBASE_PROJECT_ID=your_project_id
FIREBASE_PRIVATE_KEY=your_private_key
FIREBASE_CLIENT_EMAIL=your_client_email
\`\`\`

### 4. ุงุฎุชูุงุฑู - Supabase (ูููุณุฎ ุงูุงุญุชูุงุทู)
\`\`\`
SUPABASE_URL=your_supabase_url
SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key
\`\`\`

## ูุนูููุงุช ุงููุธุงู:
- ุงููุณุชุฎุฏู ุงูุงูุชุฑุงุถู: admin
- ูููุฉ ุงููุฑูุฑ ุงูุงูุชุฑุงุถูุฉ: admin123
- ุงูุจูุฑุช ุงูุงูุชุฑุงุถู: 5000 (ุชููุงุฆู ูู Netlify)

## ููุฒุงุช ุงููุธุงู:
- ุฅุฏุงุฑุฉ ุงููุนุงููุงุช ุงููุงููุฉ
- ุฅุฏุงุฑุฉ ุงููุดุงุฑูุน ูุงููุณุชุฎุฏููู
- ุฏูุชุฑ ุงูุฃุณุชุงุฐ ูุงููุณุชุญูุงุช
- ุชุตุฏูุฑ ุงูุชูุงุฑูุฑ
- ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู
- ุงูุชุฎุฒูู ุงูุณุญุงุจู
`
    
    fs.writeFileSync('dist/README.md', deployReadme)
    
    console.log('โ ุชู ุจูุงุก ุงูุชุทุจูู ุจูุฌุงุญ ูููุดุฑ ุนูู Netlify!')
    console.log('๐ ุงููููุงุช ุฌุงูุฒุฉ ูู ูุฌูุฏ dist/')
    console.log('๐ ููููู ุงูุขู ุฑูุน ุงููุฌูุฏ ุฅูู Netlify ุฃู GitHub')
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุจูุงุก ุงูุชุทุจูู:', error)
    process.exit(1)
  }
}

buildForNetlify()